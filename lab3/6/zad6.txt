#include<linux/module.h>
#include<linux/slab.h>
#include<linux/radix-tree.h>

#define UPPER_LIMIT 65535
static char* arguments[10];
static int argumentsCounter = 0;
int i;

static RADIX_TREE(root,GFP_KERNEL);

static int __init radixtreemod_init(void){
  printk(KERN_INFO "Start");
  for(i=1; i<argumentsCounter; i<<=3) {
      if(radix_tree_insert(&root,i,(void *)arguments[i]))
          printk(KERN_INFO "ERR");
  }
  return 0;
  }
static int __exit radixtreemod_exit(void){
  char *buff = NULL;

    for(i=1; i<argumentsCounter; i<<=3) {
        buff = (char *)radix_tree_delete(&root,i);
        if(buff) {
            printk(KERN_INFO "leci element: %s\n", buff);
            kfree(buff);
        } else {
            printk(KERN_INFO "ERR");
		}
    }

    printk(KERN_INFO "--------");
    return 0;
}
module_init(radixtreemod_init);
module_exit(radixtreemod_exit);

MODULE_LICENSE("GPL");
