#include<linux/module.h>
#include<linux/slab.h>
#include<linux/radix-tree.h>

#define UPPER_LIMIT 65535

static RADIX_TREE(root,GFP_KERNEL);
static char* arguments[10];
static int argumentsCounter = 0;
int i;

module_param_array(arguments, charp, &argumentsCounter, 0000);

static int __init start(void) {
    printk(KERN_INFO "-----------\n");

    for(i=0; i<argumentsCounter; i++) {
        if(radix_tree_insert(&root,i,(void *)arguments[i]) == 0) {
            printk(KERN_INFO "++ %s\n", arguments[i]);
		}
        else {
            printk(KERN_INFO "ERR init\n");
		}
    }
    return 0;
}

static void __exit end(void) {
	char *temp = NULL;

    for(i=0; i<argumentsCounter; i++) {
        temp = (char *)radix_tree_delete(&root,i);
        if(temp) {
            printk(KERN_INFO "leci: %s\n", temp);
            kfree(temp);
        } else {
            printk(KERN_INFO "ERR\n");
		}
    }

    printk(KERN_INFO "----------\n");
}

module_init(start);
module_exit(end);

MODULE_LICENSE("GPL");
