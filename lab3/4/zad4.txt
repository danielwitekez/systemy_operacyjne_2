#include <linux/module.h>
#include <linux/kfifo.h>

static struct kfifo fifo_queue;
static char* arguments[10]={}; 
static int argumentsCounter = 0;
int counter = 0;

module_param_array(arguments, charp, &argumentsCounter, 0000);

static int __init fifo_init(void) {
	printk(KERN_INFO "Start\n");

	kfifo_alloc(&fifo_queue, argumentsCounter * sizeof(char*), GFP_KERNEL);

	while (!kfifo_is_full(&fifo_queue)) {
		kfifo_in(&fifo_queue, &arguments[counter], sizeof(char*));
		
		printk(KERN_INFO"Dodano do kolejki element: %s", arguments[counter]);
		counter++;
	}

	return 0;
}

static void __exit fifo_exit(void) {
	char* temp;
	while (!kfifo_is_empty(&fifo_queue)) {
		kfifo_out(&fifo_queue, &temp, sizeof(char*));
		printk(KERN_INFO"Usunieto z kolejki element: %s", temp);
	}
	
	kfifo_free(&fifo_queue);
	printk(KERN_INFO "Koniec\n");
}

module_init(fifo_init);
module_exit(fifo_exit);

MODULE_LICENSE("GPL");
